// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workshop.Api.Data;

#nullable disable

namespace Workshop.Api.Migrations
{
    [DbContext(typeof(WorkshopDbContext))]
    [Migration("20251017151504_AddReservations")]
    partial class AddReservations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Workshop.Api.Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street, Downtown",
                            IsActive = true,
                            Name = "Downtown Location"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 North Avenue",
                            IsActive = true,
                            Name = "North Branch"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 East Boulevard",
                            IsActive = true,
                            Name = "East Side Location"
                        });
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.ReservableObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("ReservableObjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            LocationId = 1,
                            Name = "Desk 101",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = false,
                            LocationId = 1,
                            Name = "Desk 201",
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = true,
                            LocationId = 1,
                            Name = "Desk 301",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = false,
                            LocationId = 1,
                            Name = "Desk 401",
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            LocationId = 1,
                            Name = "Desk 501",
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            IsAvailable = true,
                            LocationId = 1,
                            Name = "Parking A-1",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            IsAvailable = false,
                            LocationId = 1,
                            Name = "Parking A-2",
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            IsAvailable = true,
                            LocationId = 1,
                            Name = "Parking A-3",
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            IsAvailable = false,
                            LocationId = 2,
                            Name = "Desk 102",
                            Type = 0
                        },
                        new
                        {
                            Id = 10,
                            IsAvailable = true,
                            LocationId = 2,
                            Name = "Desk 202",
                            Type = 0
                        },
                        new
                        {
                            Id = 11,
                            IsAvailable = false,
                            LocationId = 2,
                            Name = "Desk 302",
                            Type = 0
                        },
                        new
                        {
                            Id = 12,
                            IsAvailable = true,
                            LocationId = 2,
                            Name = "Desk 402",
                            Type = 0
                        },
                        new
                        {
                            Id = 13,
                            IsAvailable = true,
                            LocationId = 2,
                            Name = "Desk 502",
                            Type = 0
                        },
                        new
                        {
                            Id = 14,
                            IsAvailable = false,
                            LocationId = 2,
                            Name = "Parking B-1",
                            Type = 1
                        },
                        new
                        {
                            Id = 15,
                            IsAvailable = true,
                            LocationId = 2,
                            Name = "Parking B-2",
                            Type = 1
                        },
                        new
                        {
                            Id = 16,
                            IsAvailable = true,
                            LocationId = 2,
                            Name = "Parking B-3",
                            Type = 1
                        },
                        new
                        {
                            Id = 17,
                            IsAvailable = true,
                            LocationId = 3,
                            Name = "Desk 103",
                            Type = 0
                        },
                        new
                        {
                            Id = 18,
                            IsAvailable = true,
                            LocationId = 3,
                            Name = "Desk 203",
                            Type = 0
                        },
                        new
                        {
                            Id = 19,
                            IsAvailable = true,
                            LocationId = 3,
                            Name = "Desk 303",
                            Type = 0
                        },
                        new
                        {
                            Id = 20,
                            IsAvailable = true,
                            LocationId = 3,
                            Name = "Desk 403",
                            Type = 0
                        },
                        new
                        {
                            Id = 21,
                            IsAvailable = false,
                            LocationId = 3,
                            Name = "Desk 503",
                            Type = 0
                        },
                        new
                        {
                            Id = 22,
                            IsAvailable = true,
                            LocationId = 3,
                            Name = "Parking C-1",
                            Type = 1
                        },
                        new
                        {
                            Id = 23,
                            IsAvailable = true,
                            LocationId = 3,
                            Name = "Parking C-2",
                            Type = 1
                        },
                        new
                        {
                            Id = 24,
                            IsAvailable = true,
                            LocationId = 3,
                            Name = "Parking C-3",
                            Type = 1
                        });
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservableObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReservableObjectId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.ReservableObject", b =>
                {
                    b.HasOne("Workshop.Api.Data.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.Reservation", b =>
                {
                    b.HasOne("Workshop.Api.Data.Entities.ReservableObject", "ReservableObject")
                        .WithMany()
                        .HasForeignKey("ReservableObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReservableObject");
                });
#pragma warning restore 612, 618
        }
    }
}
